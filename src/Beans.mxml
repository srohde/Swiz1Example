<?xml version="1.0" encoding="utf-8"?>
<swiz:BeanProvider xmlns:swiz="http://swiz.swizframework.org"
				   xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:model="com.soenkerohde.example.model.*"
				   xmlns:ctrl="com.soenkerohde.example.ctrl.*"
				   xmlns:signal="com.soenkerohde.example.signal.*"
				   xmlns:business="com.soenkerohde.example.business.*"
				   xmlns:storage="org.swizframework.storage.*"
				   xmlns:presentation="com.soenkerohde.example.model.presentation.*">
	<fx:Script>
		<![CDATA[
			import com.soenkerohde.example.model.presentation.MainPresentationModel;
		]]>
	</fx:Script>

	<!-- Main Application controller. It contains a PostConstruct annotation which
		 can be used as the main starting point of the application. -->
	<ctrl:AppController/>

	<!-- App level beans
	<swiz:Bean name="appModel">
		<model:AppModel/>
	</swiz:Bean> -->
	<model:AppModel id="appModel"/>

	<!-- Used for state persisting -->
	<storage:SharedObjectBean name="Swiz1Example"/>

	<!-- Login/User related beans -->
	<ctrl:LoginController/>
	<ctrl:UserController/>
	<business:UserDelegate/>

	<!-- for login with as3-signals example -->
	<signal:LoginInvokeSignal/>
	<signal:LoginSignal/>

	<!-- Used in AppController and LoginController to make service calls.
		 Best practice is to declare it as a bean so only one instance will be created. -->
	<swiz:ServiceRequestUtil/>

	<!-- Presentation models in general should be declared in a Prototype tag.
		 This means the bean will only be created when it is actually needed.
		 In this case it is used in the MainView which is the second app state.
		 So if you set a break point in the MainPresentationModel constructor you will see
		 that it will be created after the login is done and the appState switches to "main" -->
	<swiz:Prototype type="{MainPresentationModel}"
					constructorArguments="{dispatcher}"/>

</swiz:BeanProvider>
